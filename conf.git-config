################################################################################
## User & E-mail
################################################################################

# Set user name and email address
git config --global user.name "Weixiang Chen"
git config --global user.email "weixiang.chen@outlook.com"


################################################################################
## Misc
################################################################################

# Enable auto-correct function for mistype commands
#git config --global help.autocorrect 1

# Abbreviate commit hashes to 12 characters
git config --global core.abbrev 12


################################################################################
## Variables
################################################################################

#-------------------------------------------------------------------------------
# Use vim as editor
#-------------------------------------------------------------------------------
git config --global core.editor vim

#-------------------------------------------------------------------------------
# Set highlight for terminal
#-------------------------------------------------------------------------------
git config --global color.ui true
git config --global color.status auto
git config --global color.branch auto
git config --global color.showbranch auto
git config --global color.diff auto
git config --global color.grep auto
git config --global color.interactive auto

#-------------------------------------------------------------------------------
# Specify how differences in submodules are shown.
# Same as "git diff --submodule=diff <tag-or-commit-ids>"
#-------------------------------------------------------------------------------
git config --global diff.submodule diff

#-------------------------------------------------------------------------------
# Specify how to reconcile divergent branches.
# Same as "git pull --ff-only"
#-------------------------------------------------------------------------------
git config --global pull.ff only


################################################################################
## Aliases
################################################################################

#-------------------------------------------------------------------------------
# Remove section "alias" from ~/.gitconfig to clean legacy alias
#-------------------------------------------------------------------------------
git config --global --remove-section alias

#-------------------------------------------------------------------------------
# List local or remote branches.
# Usage:  git br [-r]
#-------------------------------------------------------------------------------
git config --global alias.br branch

#-------------------------------------------------------------------------------
# Checkout to specific branch, tag or commit.
# Usage:  git co <branch>
#         git co <tag-or-commit-id>
#-------------------------------------------------------------------------------
git config --global alias.co checkout

#-------------------------------------------------------------------------------
# Checkout to master branch.
# Usage:  git cm
#-------------------------------------------------------------------------------
git config --global alias.cm 'checkout master'

#-------------------------------------------------------------------------------
# Checkin changes.
# Usage:  git ci [--amend]
#-------------------------------------------------------------------------------
git config --global alias.ci commit

#-------------------------------------------------------------------------------
# Checkin changes.
# Usage:  git cp
#-------------------------------------------------------------------------------
git config --global alias.cp cherry-pick

#-------------------------------------------------------------------------------
# Show repo status.
# Usage:  git st
#-------------------------------------------------------------------------------
git config --global alias.st status

#-------------------------------------------------------------------------------
# Use graphical tool to merge commit, see below configurations.
# Usage:  git mt
#-------------------------------------------------------------------------------
git config --global alias.mt mergetool

#-------------------------------------------------------------------------------
# Give an object a human readable name based on an available ref.
# Usage:  git desc
#-------------------------------------------------------------------------------
git config --global alias.desc 'describe'

#-------------------------------------------------------------------------------
# List commit history in tree format.
# Usage:  git tree
#-------------------------------------------------------------------------------
git config --global alias.tree "log --graph --pretty=oneline --abbrev-commit --all --decorate"

#-------------------------------------------------------------------------------
# List commit history of a specified file.
# Usage:  git follow <file>
#-------------------------------------------------------------------------------
git config --global alias.follow "log --pretty='%h %Cgreen(%cr)%Creset %Cblue%an%Creset %Creset %s %C(yellow)%d' --follow"

#-------------------------------------------------------------------------------
# Log commit History with Graphical (20 records by default).
# Usage:  git lhg [-<numberOfRecords>]
#         git lhg [-<numberOfRecords>] [<tag-or-commit-id>]
#         git lhg [-<numberOfRecords>] [<tag-or-commit-id>..<tag-or-commit-id>]
#         git lhg [-<numberOfRecords>] [<tag-or-commit-id>~..<tag-or-commit-id>]
#-------------------------------------------------------------------------------
git config --global alias.lhg "log --date=short --pretty=format:'%Cgreen%h %Cred%ad %Cblue%cn %Creset%s %Cred%d' --graph --topo-order --decorate -20"

#-------------------------------------------------------------------------------
# Log commit History of First Parent (all records by default).
# Usage:  git lhfp [-<numberOfRecords>]
#         git lhfp [-<numberOfRecords>] [<tag-or-commit-id>]
#         git lhfp [-<numberOfRecords>] [<tag-or-commit-id>..<tag-or-commit-id>]
#         git lhfp [-<numberOfRecords>] [<tag-or-commit-id>~..<tag-or-commit-id>]
#-------------------------------------------------------------------------------
git config --global alias.lhfp "log --date=short --pretty=format:'%Cgreen%h %Cred%ad %Cblue%cn %Creset%s %Cred%d' --topo-order --decorate --first-parent"

#-------------------------------------------------------------------------------
# Log commit History of First Parent with more Details (all records by default).
# Usage:  git lhfpd [-<numberOfRecords>]
#         git lhfpd [-<numberOfRecords>] [<tag-or-commit-id>]
#         git lhfpd [-<numberOfRecords>] [<tag-or-commit-id>..<tag-or-commit-id>]
#         git lhfpd [-<numberOfRecords>] [<tag-or-commit-id>~..<tag-or-commit-id>]
#-------------------------------------------------------------------------------
git config --global alias.lhfpd "log --numstat -c --decorate --pretty=fuller --first-parent"

#-------------------------------------------------------------------------------
# List Commit.
# Usage:  git lc <tag-or-commit-id>   : List the commit <tag-or-commit-id>
#         git lc <tag-or-commit-id>~  : List the first  parent of commit <tag-or-commit-id>, same as variants b), c)
#         git lc <tag-or-commit-id>^  : List the first  parent of commit <tag-or-commit-id>, same as variants a), c)
#         git lc <tag-or-commit-id>^1 : List the first  parent of commit <tag-or-commit-id>, same as variants a), b)
#         git lc <tag-or-commit-id>^2 : List the second parent of commit <tag-or-commit-id>
#-------------------------------------------------------------------------------
git config --global alias.lc "log --numstat -1 -c --decorate --pretty=fuller"

#-------------------------------------------------------------------------------
# List Commit with Patch format.
# Usage:  git lcp <tag-or-commit-id>
#-------------------------------------------------------------------------------
git config --global alias.lcp "log --no-prefix -1 -p --decorate --pretty=fuller"

#-------------------------------------------------------------------------------
# Execute shell script ~/scripts/git-ls.sh to list changes in specific commit.
# Usage:  git sls [-h]
#         git sls [-p <previous-commit>] [-c <current-commit>] [-e | -n]
#         git sls [-c <current-commit>] [-s | -l]
#-------------------------------------------------------------------------------
git config --global alias.sls '!~/scripts/git-ls.sh'

#-------------------------------------------------------------------------------
# Show file content on specific commit.
# Usage:  git cf <tag-or-commit-id>:/path/to/file              : Show content of /path/to/file on tag or commit <tag-or-commit-id> on screen
#         git cf <tag-or-commit-id>:/path/to/file | less -N    : Show content of /path/to/file on tag or commit <tag-or-commit-id> on editor less
#-------------------------------------------------------------------------------
git config --global alias.cf "cat-file -p"

#-------------------------------------------------------------------------------
# Execute shell script ~/scripts/git-archive.sh to archive specific commit.
# Usage:  git sar { [-c commit-id] [-p path ] [-o output-dir] [-m] | [-h] }
#-------------------------------------------------------------------------------
git config --global alias.sar '!~/scripts/git-archive.sh'

#-------------------------------------------------------------------------------
# Use graphical tool to show differences, see below configurations.
# Usage:  git dt [branch-or-tag-or-commit-id1 [branch-or-tag-or-commit-id2]]
#-------------------------------------------------------------------------------
git config --global alias.dt difftool

#-------------------------------------------------------------------------------
# Execute shell script ~/scripts/git-dt.sh to show changes between commits.
# Usage:  git sdt [-h]
#         git sdt [-p <previous-commit>] [-c <current-commit>] [-f <file>] [-d] [-t]
#-------------------------------------------------------------------------------
git config --global alias.sdt '!~/scripts/git-dt.sh'

#-------------------------------------------------------------------------------
# Diff Two Commits.
# Usage:  git dtc <tag-or-commit-id-1> <tag-or-commit-id-2>
#-------------------------------------------------------------------------------
git config --global alias.dtc "diff --no-prefix"

#-------------------------------------------------------------------------------
# Diff Two Commits with Statistics.
# Usage:  git dtcs <tag-or-commit-id-1> <tag-or-commit-id-2>
#-------------------------------------------------------------------------------
git config --global alias.dtcs "diff --no-prefix --shortstat"

#-------------------------------------------------------------------------------
# Diff Two Commits with Statistics, include File changes.
# Usage:  git dtcsf <tag-or-commit-id-1> <tag-or-commit-id-2>
#-------------------------------------------------------------------------------
git config --global alias.dtcsf "diff --no-prefix --stat"

#-------------------------------------------------------------------------------
# List Tags sorted with "v:refname".
# Usage:  git lts
#-------------------------------------------------------------------------------
git config --global alias.lts 'tag --sort="v:refname"'

#-------------------------------------------------------------------------------
# List Tag.
# Usage:  git lt <tag-or-commit-id>
#-------------------------------------------------------------------------------
git config --global alias.lt 'tag --points-at'

#-------------------------------------------------------------------------------
# List closest Tagname on first parent.
# Usage:  git llt
#-------------------------------------------------------------------------------
git config --global alias.llt 'describe --abbrev=0 --tags --first-parent HEAD'

#-------------------------------------------------------------------------------
# List Branch which contains specific Tag or commit.
# Usage:  git lbt <tag-or-commit-id>
#-------------------------------------------------------------------------------
git config --global alias.lbt 'branch -a --contains'

#-------------------------------------------------------------------------------
# List Merge Bases for the specified commits, tags, or branches.
# Usage:  git lmb {<branch-1> | <tag-1> | <commit-1>} {<branch-2> | <tag-2> | <commit-2>}
#-------------------------------------------------------------------------------
git config --global alias.lmb 'show-branch --merge-base'

#-------------------------------------------------------------------------------
# Grep commit Log.
# Usage:  git gl <keyword> [-- <files>]
# Note: It cannot grep the content of each patch.
#-------------------------------------------------------------------------------
git config --global alias.gl "log --all --stat --grep"

#-------------------------------------------------------------------------------
# Print Lines matching a pattern.
# Usage:  git pl <keyword> [-- <files>]
#-------------------------------------------------------------------------------
git config --global alias.pl "grep --full-name -n --heading --break -p"

#-------------------------------------------------------------------------------
# Print Lines matching a pattern (Ignore case).
# Usage:  git pl <keyword> [-- <files>]
#-------------------------------------------------------------------------------
git config --global alias.pli "grep --full-name -n --heading --break -p -i"

#-------------------------------------------------------------------------------
# List Untracked ALL directories and files from working tree.
# Usage:  git lua
#-------------------------------------------------------------------------------
git config --global alias.lua "clean -d -n"

#-------------------------------------------------------------------------------
# Remove ALL untracked directories and files from working tree.
# Usage:  git rma
#-------------------------------------------------------------------------------
git config --global alias.rma "clean -d -f -X"

#-------------------------------------------------------------------------------
# List References in a local repository.
# Usage:  git lr
#-------------------------------------------------------------------------------
git config --global alias.lr "show-ref --head --heads --tags -d"

#-------------------------------------------------------------------------------
# List Submodule Status.
# Usage:  git subst
#-------------------------------------------------------------------------------
git config --global alias.subst "submodule status"

#-------------------------------------------------------------------------------
# Update submodule.
# Usage:  git subupd
#-------------------------------------------------------------------------------
git config --global alias.subupd "submodule update --init --recursive"

#-------------------------------------------------------------------------------
# Reset all submodules.
# Usage:  git subrt
#-------------------------------------------------------------------------------
git config --global alias.subrt "submodule foreach --recursive git reset --hard"

#-------------------------------------------------------------------------------
# Apply the last stash change.
# Usage:  git stash-unapply
#-------------------------------------------------------------------------------
#git config --global alias.stash-unapply '!git stash show -p | git apply -R'


################################################################################
## git difftool & mergetool
################################################################################

# Use Beyond Compare 3 as git difftool and mergetool
#git config --global diff.tool bc3
#git config --global difftool.bc3.trustexitcode true
#git config --global merge.tool bc3
#git config --global mergetool.prompt false
#git config --global mergetool.keepbackup false
#git config --global mergetool.bc3.trustexitcode true

# Use Meld as git difftool and mergetool
git config --global diff.tool meld
git config --global merge.tool meld
git config --global mergetool.prompt false
git config --global mergetool.keepbackup false

